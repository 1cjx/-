Index: framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.jx.service.impl;\r\n\r\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\r\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\r\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\r\nimport com.jx.constants.SystemConstants;\r\nimport com.jx.domain.ResponseResult;\r\nimport com.jx.domain.bo.*;\r\nimport com.jx.domain.dto.*;\r\nimport com.jx.domain.entity.*;\r\nimport com.jx.domain.vo.*;\r\nimport com.jx.enums.AppHttpCodeEnum;\r\nimport com.jx.exception.SystemException;\r\nimport com.jx.mapper.*;\r\nimport com.jx.service.*;\r\nimport com.jx.utils.*;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.springframework.util.StringUtils;\r\n\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.stream.Collectors;\r\n\r\n/**\r\n * (Activity)表服务实现类\r\n *\r\n * @author makejava\r\n * @since 2023-09-02 17:21:00\r\n */\r\n@Service(\"activityService\")\r\npublic class ActivityServiceImpl extends ServiceImpl<ActivityMapper, Activity> implements ActivityService {\r\n\r\n    @Autowired\r\n    ActivityService activityService;\r\n    @Autowired\r\n    ScheduledService scheduledService;\r\n    @Autowired\r\n    ActivityAssignmentMapper activityAssignmentMapper;\r\n    @Autowired\r\n    ScheduledMapper scheduledMapper;\r\n    @Autowired\r\n    ActivityAssignmentService activityAssignmentService;\r\n    @Autowired\r\n    PostMapper postMapper;\r\n    @Autowired\r\n    SignInUserMapper signInUserMapper;\r\n    @Autowired\r\n    PostService postService;\r\n    @Autowired\r\n    LocationMapper locationMapper;\r\n    @Autowired\r\n    ActivityMapper activityMapper;\r\n    @Autowired\r\n    UserMapper userMapper;\r\n    @Autowired\r\n    VolunteerRecordMapper volunteerRecordMapper;\r\n    @Autowired\r\n    RedisCache redisCache;\r\n    @Autowired\r\n    PostAssignmentService postAssignmentService;\r\n    @Autowired\r\n    CategoryService categoryService;\r\n    @Autowired\r\n    PostAssignmentMapper postAssignmentMapper;\r\n    @Autowired\r\n    SignInService signInService;\r\n    @Autowired\r\n    SignInMapper signInMapper;\r\n    @Autowired\r\n    EmailService emailService;\r\n\r\n    /**\r\n     * 获取活动列表\r\n     * 返回活动名、活动主题、活动时间\r\n     * @return\r\n     */\r\n    @Override\r\n    public ResponseResult getActivityList(String status,Long locationId,Long categoryId,String activityName,Long pageNum,Long pageSize) {\r\n        //根据status、location、department、category查询活动信息\r\n        //其中department为用户的department 当仅当该部门成员或会长团可以访问该活动\r\n        User user = SecurityUtils.getLoginUser().getUser();\r\n        List<Activity>activityList = activityMapper.getActivityList(status,locationId,user.getDepartmentId(),categoryId,activityName);\r\n        //封装\r\n        List<ListActivityVo>activityVos = BeanCopyUtils.copyBeanList(activityList, ListActivityVo.class);\r\n        //查询活动开展的地点\r\n        activityVos.stream().forEach(\r\n                o->\r\n                       o.setLocations(BeanCopyUtils.copyBeanList(locationMapper.getActivityLocations(o.getId())\r\n                                , ListLocationVo.class)));\r\n        //分页\r\n        Page<ListActivityVo> listActivityVoPage = PageUtils.listToPage(activityVos,pageNum,pageSize);\r\n        PageVo pageVo = new PageVo(listActivityVoPage.getRecords(),listActivityVoPage.getTotal());\r\n        return ResponseResult.okResult(pageVo);\r\n    }\r\n\r\n    public void judgeSchedule(AddScheduledDto addScheduledDto){\r\n        //判断活动是否还存在\r\n        Activity activity = activityService.getById(addScheduledDto.getActivityId());\r\n        if(Objects.isNull(activity)){\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_NOT_EXITS);\r\n        }\r\n        //判断该活动是否还招募\r\n        if(activity.getStatus().equals(SystemConstants.STATUS_ERROR)){\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_NOT_RECRUIT);\r\n        }\r\n        ActivityAssignment activityAssignment = activityAssignmentService.getById(addScheduledDto.getActivityAssignmentId());\r\n        //判断班次是否存在\r\n        if(Objects.isNull(activityAssignment)){\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_ASSIGNMENT_NOT_EXITS);\r\n        }\r\n        //判断该班次是否还招募\r\n        if(activityAssignment.getStatus().equals(SystemConstants.STATUS_ERROR)){\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_ASSIGNMENT_NOT_RECRUIT);\r\n        }\r\n    }\r\n    @Override\r\n    @Transactional\r\n    public ResponseResult addSchedule(AddScheduledDto addScheduledDto) {\r\n        User user = SecurityUtils.getLoginUser().getUser();\r\n        Long userId = user.getId();\r\n        addScheduledDto.setUserId(userId);\r\n        //判断活动和班次\r\n        judgeSchedule(addScheduledDto);\r\n        //该用户角色和部门是否符合条件\r\n        PostAssignment postAssignment = postAssignmentService.getById(addScheduledDto.getPostAssignmentId());\r\n        Long postAllowedTitleId = postAssignment.getAllowedTitleId();\r\n        Long postDepartmentId = postAssignment.getAllowedDepartmentId();\r\n        // 判断角色\r\n        if(!postAllowedTitleId.equals(0L)&&!postAllowedTitleId.equals(user.getTitleId())){\r\n            throw new SystemException(AppHttpCodeEnum.USER_PERMISSION_NOT_ENOUGH);\r\n        }\r\n        //判断部门\r\n        if(!postDepartmentId.equals(0L)&&!postDepartmentId.equals(user.getDepartmentId())){\r\n            throw new SystemException(AppHttpCodeEnum.USER_PERMISSION_NOT_ENOUGH);\r\n        }\r\n        //判断在同一时间段是否报班\r\n        Long cnt = activityAssignmentMapper.getUserIsInThisTimeSlot(userId,addScheduledDto.getPostAssignmentId());\r\n        if(cnt>0L){\r\n            throw new SystemException(AppHttpCodeEnum.JUST_ONE_POST);\r\n        }\r\n        Scheduled scheduled = BeanCopyUtils.copyBean(addScheduledDto,Scheduled.class);\r\n        if(Objects.isNull(user.getEmail())){\r\n            throw new SystemException(AppHttpCodeEnum.EMAIL_NOT_NULL);\r\n        }\r\n        //报名\r\n        if(doSecKill(addScheduledDto.getUserId(),addScheduledDto.getPostAssignmentId())){\r\n            scheduledService.save(scheduled);\r\n        }\r\n        //报名成功 发送邮件\r\n        emailService.sendEmail(scheduled);\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n    @Override\r\n    @Transactional\r\n    public ResponseResult cancelSchedule(AddScheduledDto addScheduledDto) {\r\n        judgeSchedule(addScheduledDto);\r\n        Long userId = SecurityUtils.getUserId();\r\n        Long postAssignmentId = addScheduledDto.getPostAssignmentId();\r\n        //限制每个月只能退选两次\r\n        Integer num = redisCache.getCacheObject(\"cancelSchedule:\"+userId);\r\n        if(Objects.isNull(num)){\r\n            redisCache.setCacheObject(\"cancelSchedule:\"+userId,2, TimeUtils.getSecondToNextMonth(), TimeUnit.SECONDS);\r\n        }\r\n        else if(num<=0){\r\n            throw new SystemException(AppHttpCodeEnum.THIS_MONTH_CANCEL_NUMBER_RUN_OUT);\r\n        }\r\n        redisCache.decrementCount(\"cancelSchedule:\"+userId,1L);\r\n        // 库存key\r\n        String kcKey = \"sk:\" + postAssignmentId + \":qt\";\r\n        // 秒杀成功用户key\r\n        String userKey = \"sk:\" + postAssignmentId + \":user\";\r\n        // 库存+1\r\n        redisCache.addCount(kcKey,1L);\r\n        // 用户从清单里面删除\r\n        redisCache.deleteMember(userKey,String.valueOf(userId));\r\n        //从数据库中删除信息\r\n        Scheduled scheduled = BeanCopyUtils.copyBean(addScheduledDto,Scheduled.class);\r\n        scheduled.setUserId(userId);\r\n        scheduledMapper.remove(scheduled);\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n    @Override\r\n    public ResponseResult getActivityDetail(Long activityId) {\r\n        //根据活动id获取活动的基本信息\r\n        ActivityDetailVo activityDetailVo = activityMapper.getActivityDetails(activityId);\r\n        //获取当前用户信息\r\n        User user = SecurityUtils.getLoginUser().getUser();\r\n        //这个活动当前是否允许查看\r\n        // 1.判断状态是否是发布状态\r\n        if(activityDetailVo.getStatus().equals(SystemConstants.STATUS_ERROR)) {\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_NOT_EXITS);\r\n        }\r\n        // 2.判断允许部门是否包括 用户所在部门\r\n        Long activityAllowedDepartmentId = activityDetailVo.getAllowedDepartmentId();\r\n        if(!activityAllowedDepartmentId.equals(user.getDepartmentId())&&!activityAllowedDepartmentId.equals(0L)&&!activityAllowedDepartmentId.equals(-1L)) {\r\n            throw new SystemException(AppHttpCodeEnum.ACTIVITY_NOT_EXITS);\r\n        }\r\n        //获取活动的举办地点\r\n        activityDetailVo.setLocations(activityMapper.getActivityLocations(activityId));\r\n        //活动排班信息为列表 日期+地点+班次列表为元素\r\n        //获取活动的排班信息中的日期和地点\r\n        List<ActivityAssignmentsBo> schedule = activityAssignmentMapper.getActivityAssignmentsVoList(activityId);\r\n        //根据日期、地点、班次类型获取班次列表\r\n        if(!schedule.isEmpty()) {\r\n            schedule.stream().forEach(\r\n                    o -> {\r\n                        System.out.println(11);\r\n                        List<ClassBo> classBos = activityAssignmentMapper.getTimeSlotVoList(activityId,o.getTypeId(),o.getLocationId(), o.getTime());\r\n                        classBos.stream().forEach(\r\n                                e -> {\r\n                                    System.out.println(22);\r\n                                    //根据时间段id、日期、地点获取岗位列表\r\n                                    List<PostNeedBo> postNeedBoList = postMapper.getPostNeedVoList(e.getActivityAssignmentId(),null,user.getDepartmentId(),user.getTitleId());\r\n                                    postNeedBoList.stream().forEach(\r\n                                            k -> {\r\n                                                System.out.println(33);\r\n                                                String needPeople = k.getReqPeople();\r\n                                                LambdaQueryWrapper<Scheduled> lambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n                                                lambdaQueryWrapper.eq(Scheduled::getPostAssignmentId, k.getId());\r\n                                                String nowPeople = String.valueOf(scheduledService.count(lambdaQueryWrapper));\r\n                                                String reqPeople = nowPeople + \"/\" + needPeople;\r\n                                                k.setReqPeople(reqPeople);\r\n                                                Long userId = user.getId();\r\n                                                lambdaQueryWrapper.eq(Scheduled::getUserId,userId);\r\n                                                if(scheduledService.count(lambdaQueryWrapper)>0){\r\n                                                    k.setChoose(true);\r\n                                                }\r\n                                                else{\r\n                                                    k.setChoose(false);\r\n                                                }\r\n                                            }\r\n                                    );\r\n                                    e.setPostNeedBoList(postNeedBoList);\r\n                                }\r\n                        );\r\n                        o.setAssignmentVoList(classBos);\r\n                    }\r\n            );\r\n        }\r\n        //进行一个过滤处理,筛选掉为空的信息\r\n        System.out.println(schedule);\r\n        schedule = schedule.stream().map(o->{\r\n            o.setAssignmentVoList(o.getAssignmentVoList().stream().filter(e->!e.getPostNeedBoList().isEmpty()).collect(Collectors.toList()));\r\n            return o;\r\n        }).filter(o->!o.getAssignmentVoList().isEmpty()).collect(Collectors.toList());\r\n        activityDetailVo.setScheduled(schedule);\r\n\r\n        //班次岗位列表以排班岗位+所需人数为元素\r\n        return ResponseResult.okResult(activityDetailVo);\r\n    }\r\n\r\n\r\n    @Override\r\n    public ResponseResult userActivityList(Long pageNum, Long pageSize,Boolean type) {\r\n        //获取用户id\r\n        Long userId = SecurityUtils.getUserId();\r\n        String postName = type?SystemConstants.IS_LEADER:null;\r\n        List<ActivityVo> activityVos =  activityMapper.getUserActivity(userId,postName);\r\n        Page<ActivityVo> pageUserActivityVos = PageUtils.listToPage(activityVos,pageNum,pageSize);\r\n        PageVo pageVo = new PageVo(pageUserActivityVos.getRecords(),pageUserActivityVos.getTotal());\r\n        return ResponseResult.okResult(pageVo);\r\n    }\r\n\r\n    @Override\r\n    public ResponseResult userActivityDetail(Long activityId,Boolean type) {\r\n        //获取用户id\r\n        Long userId = SecurityUtils.getUserId();\r\n        //获取用户在当前活动参与的排班\r\n        List<Scheduled> scheduled = scheduledMapper.getUserInThisActivitySchedules(activityId,userId);\r\n        List<UserActivityAssignmentVo> userActivityAssignmentVos = new ArrayList<>();\r\n        for (Scheduled s:scheduled) {\r\n            String postName = postMapper.getPostByActivityAssignmentId(s.getPostAssignmentId());\r\n            PostAssignment postAssignment = postAssignmentService.getById(s.getPostAssignmentId());\r\n            ActivityAssignmentVo activityAssignmentVoList = activityAssignmentMapper.getActivityAssignmentVo(postAssignment.getActivityAssignmentId());\r\n            if(type) {\r\n                if(postName.equals(SystemConstants.IS_LEADER)) {\r\n                    UserActivityAssignmentVo userActivityAssignmentVo = new UserActivityAssignmentVo(activityAssignmentVoList, null, null, null, null);\r\n                    //封装volunteer信息\r\n                    //获取当前排班的信息\r\n                    ActivityAssignment activityAssignment = activityAssignmentService.getById(postAssignment.getActivityAssignmentId());\r\n                    //查询本班次的岗位信息\r\n                    List<PostNeedBo> postNeedBoList = postMapper.getPostNeedVoList(postAssignment.getActivityAssignmentId(), SystemConstants.IS_LEADER, 0L, 0L);\r\n                    //查询本班次各个岗位志愿者信息\r\n                    postNeedBoList.stream().forEach(o -> {\r\n                                o.setVolunteerInfoBoList(userMapper.getVolunteerInfo(o.getId()));\r\n                                //封装人数信息\r\n                                LambdaQueryWrapper<Scheduled> lambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n                                lambdaQueryWrapper.eq(Scheduled::getPostAssignmentId, o.getId());\r\n                                String nowPeopleNum = String.valueOf(scheduledService.count(lambdaQueryWrapper));\r\n                                String requestPeopleNum = nowPeopleNum + \"/\" + o.getReqPeople();\r\n                                o.setReqPeople(requestPeopleNum);\r\n                            }\r\n                    );\r\n                    //将志愿者信息封装\r\n                    userActivityAssignmentVo.setVolunteersInfo(postNeedBoList);\r\n                    userActivityAssignmentVos.add(userActivityAssignmentVo);\r\n                }\r\n            }\r\n            else{\r\n                    //封装活动信息\r\n                    //根据用户所报岗位信息 查询班次id\r\n                UserActivityAssignmentVo userActivityAssignmentVo = new UserActivityAssignmentVo(activityAssignmentVoList, s.getCreateTime(), postName, null, null);\r\n                    //封装leader信息\r\n                    if(!postName.equals(SystemConstants.IS_LEADER)){\r\n                        UserInfoVo leaderInfo = userMapper.getLeaderInfo(s.getPostAssignmentId());\r\n                        userActivityAssignmentVo.setLeaderInfo(leaderInfo);\r\n                    }\r\n                userActivityAssignmentVos.add(userActivityAssignmentVo);\r\n            }\r\n        }\r\n        Activity activity = getById(activityId);\r\n        ActivityVo activityVo = BeanCopyUtils.copyBean(activity,ActivityVo.class);\r\n        UserActivityVo userActivityVo = new UserActivityVo(userActivityAssignmentVos,activityVo);\r\n        return ResponseResult.okResult(userActivityVo);\r\n    }\r\n\r\n\r\n    @Override\r\n    public ResponseResult userVolunteerInfo(Long pageNum, Long pageSize) {\r\n        Long userId = SecurityUtils.getUserId();\r\n        //获取用户已完成签到的活动列表\r\n        List<VolunteerRecordVo> volunteerRecordVos =volunteerRecordMapper.getUserVolunteerActivityInfo(userId);\r\n        //封装信息\r\n        volunteerRecordVos.stream().forEach(o->{\r\n            //获取活动相关信息\r\n            Activity activity = activityService.getById(o.getActivityId());\r\n            //封装活动简略信息\r\n            ActivityVo activityVo = BeanCopyUtils.copyBean(activity,ActivityVo.class);\r\n            o.setActivityVo(activityVo);\r\n            //封装该活动用户参与的总时长\r\n            Double activityTotalTime = volunteerRecordMapper.getUserVolunteerActivityTotalTime(userId,o.getActivityId());\r\n            if(Objects.isNull(activityTotalTime)){\r\n                o.setTotalVolunteerTime(0.0);\r\n            }\r\n            else{\r\n                o.setTotalVolunteerTime(activityTotalTime);\r\n            }\r\n            //获取用户参与的班次id列表\r\n            List<VolunteerRecordBo> volunteerRecordBoList = volunteerRecordMapper.getUserVolunteerAssignmentInfo(userId,o.getActivityId());\r\n            volunteerRecordBoList.stream().forEach(e->{\r\n                //封装班次志愿者的工作总结\r\n                VolunteerRecord volunteerRecord = volunteerRecordMapper.getUserVolunteerInfo(userId,e.getActivityAssignmentId());\r\n                e.setReason(volunteerRecord.getReason());\r\n                e.setStatus(volunteerRecord.getStatus());\r\n                e.setVolunteerTime(volunteerRecord.getVolunteerTime());\r\n                //封装班次信息\r\n               e.setActivityAssignmentVo(activityAssignmentMapper.getActivityAssignmentVo(e.getActivityAssignmentId()));\r\n            });\r\n            o.setVolunteerRecordBoList(volunteerRecordBoList);\r\n        });\r\n        Page<VolunteerRecordVo> volunteerRecordVoPage = PageUtils.listToPage(volunteerRecordVos,pageNum,pageSize);\r\n        PageVo pageVo = new PageVo(volunteerRecordVoPage.getRecords(),volunteerRecordVoPage.getTotal());\r\n        return ResponseResult.okResult(pageVo);\r\n    }\r\n\r\n    @Override\r\n    public ResponseResult listActivity(Long pageSize, Long pageNum, ListActivityDto listActivityDto) {\r\n        LambdaQueryWrapper<Activity> activityLambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n        activityLambdaQueryWrapper.like(StringUtils.hasText(listActivityDto.getName()),Activity::getName,listActivityDto.getName());\r\n        activityLambdaQueryWrapper.eq(StringUtils.hasText(listActivityDto.getStatus()),Activity::getStatus,listActivityDto.getStatus());\r\n        activityLambdaQueryWrapper.eq(!Objects.isNull(listActivityDto.getCategoryId()),Activity::getCategoryId,listActivityDto.getCategoryId());\r\n        activityLambdaQueryWrapper.orderByDesc(Activity::getBeginDate);\r\n        List<Activity> activityList = list(activityLambdaQueryWrapper);\r\n        List<ListActivityBo> activityVos = BeanCopyUtils.copyBeanList(activityList,ListActivityBo.class);\r\n        activityVos.stream().forEach(o->{\r\n            Category category = categoryService.getById(o.getCategoryId());\r\n            if(!Objects.isNull(category)) {\r\n                o.setCategory(category.getName());\r\n            }\r\n            else{\r\n                o.setCategory(\"暂无\");\r\n            }\r\n        });\r\n        Page<ListActivityBo> activityVoPage = PageUtils.listToPage(activityVos,pageNum,pageSize);\r\n        PageVo pageVo = new PageVo(activityVoPage.getRecords(),activityVoPage.getTotal());\r\n        return ResponseResult.okResult(pageVo);\r\n    }\r\n\r\n    @Override\r\n    public ResponseResult getActivityDetailForAdmin(Long id) {\r\n        //根据活动id获取活动的基本信息\r\n        Activity activity = activityService.getById(id);\r\n        ActivityDetailForAdminVo activityDetailForAdminVo = BeanCopyUtils.copyBean(activity,ActivityDetailForAdminVo.class);\r\n        List<ActivityAssignmentInfoBo> activityAssignmentInfoBos = activityMapper.getActivityAssignmentInfoBo(id);\r\n        activityAssignmentInfoBos.stream().forEach(o->{\r\n            List<PostNeedBo> postNeedBoList = postMapper.getPostNeedVoListByActivityAssignmentId(o.getId());\r\n            postNeedBoList.stream().forEach(e->{\r\n                e.setVolunteerInfoBoList(userMapper.getVolunteerInfo(e.getId()));\r\n                //封装人数信息\r\n                LambdaQueryWrapper<Scheduled> lambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n                lambdaQueryWrapper.eq(Scheduled::getPostAssignmentId, e.getId());\r\n                Long nowPeopleNum = (long)(scheduledService.count(lambdaQueryWrapper));\r\n                e.setNowPeople(nowPeopleNum);\r\n            });\r\n            o.setPostList(postNeedBoList);\r\n        });\r\n        activityDetailForAdminVo.setActivityAssignmentList(activityAssignmentInfoBos);\r\n        return ResponseResult.okResult(activityDetailForAdminVo);\r\n    }\r\n\r\n\r\n    @Override\r\n    @Transactional\r\n    public ResponseResult releaseActivity(AddActivityDto addActivityDto) {\r\n        Activity activity = BeanCopyUtils.copyBean(addActivityDto,Activity.class);\r\n        //插入新活动 返回活动id\r\n        activityMapper.insert(activity);\r\n        Long activityId = activity.getId();\r\n        List<AddActivityAssignmentDto> activityAssignmentDetailVos = addActivityDto.getActivityAssignmentList();\r\n        activityAssignmentDetailVos.stream().forEach(o->{\r\n            ActivityAssignment activityAssignment = BeanCopyUtils.copyBean(o,ActivityAssignment.class);\r\n            activityAssignment.setActivityId(activityId);\r\n            //插入新班次 返回班次id\r\n            activityAssignmentMapper.insert(activityAssignment);\r\n            Long activityAssignmentId = activityAssignment.getId();\r\n            List<AddPostAssignmentDto> postAssignmentDtoList = o.getPostList();\r\n            postAssignmentDtoList.stream().forEach(e->{\r\n                PostAssignment postAssignment = BeanCopyUtils.copyBean(e,PostAssignment.class);\r\n                postAssignment.setPeopleNumber(e.getReqPeople());\r\n                postAssignment.setActivityAssignmentId(activityAssignmentId);\r\n                // 插入新岗位需求 返回岗位需求id\r\n                postAssignmentMapper.insert(postAssignment);\r\n                Long postAssignmentId = postAssignment.getId();\r\n                Integer reqVolunteerNum = postAssignment.getPeopleNumber().intValue();\r\n                // redis创建报班申请\r\n                String key = \"sk:\" + postAssignmentId +\":qt\";\r\n                redisCache.setCacheObject(key,reqVolunteerNum);\r\n            });\r\n        });\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n    @Override\r\n    @Transactional\r\n    public ResponseResult updateActivity(UpdateActivityDto updateActivityDto) {\r\n        Activity activity = BeanCopyUtils.copyBean(updateActivityDto,Activity.class);\r\n        //根据活动id修改活动信息\r\n        Long activityId = activity.getId();\r\n        updateById(activity);\r\n        List<UpdateActivityAssignmentDto> updateActivityAssignmentDtoList =  updateActivityDto.getActivityAssignmentList();\r\n        updateActivityAssignmentDtoList.stream().forEach(o->{\r\n            //根据班次id修改班次信息 如果id不存在 则说明是新增的班次\r\n            ActivityAssignment activityAssignment = BeanCopyUtils.copyBean(o,ActivityAssignment.class);\r\n            Long activityAssignmentId = activityAssignment.getId();\r\n            if(!Objects.isNull(activityAssignmentId)){\r\n                if(activityAssignmentId<0L){//为负数说明删除\r\n                    //删除与之相关的信息\r\n                    activityAssignmentId = -activityAssignmentId;\r\n                    deletePostAssignment(activityAssignmentId);\r\n                    activityAssignmentService.removeById(activityAssignmentId);\r\n                }\r\n                else{\r\n                    activityAssignmentService.updateById(activityAssignment);\r\n                }\r\n            }\r\n            else{\r\n                activityAssignment.setActivityId(activityId);\r\n                activityAssignmentMapper.insert(activityAssignment);\r\n            }\r\n            List<UpdatePostAssignmentDto> updatePostAssignmentDtoList = o.getPostList();\r\n            updatePostAssignmentDtoList.stream().forEach(e->{\r\n                //根据岗位信息id修改岗位需求 如果id不存在 则说明是新增的岗位信息\r\n                PostAssignment newPostAssignment = BeanCopyUtils.copyBean(e,PostAssignment.class);\r\n                newPostAssignment.setPeopleNumber(e.getReqPeople());\r\n                Long postAssignmentId = newPostAssignment.getId();\r\n                if(!Objects.isNull(postAssignmentId)){\r\n                    if(postAssignmentId<0L){\r\n                        // 删除该岗位志愿者\r\n                        deleteVolunteer(-postAssignmentId);\r\n                        //删除该岗位信息\r\n                        postAssignmentService.removeById(-postAssignmentId);\r\n                    }\r\n                    else {\r\n                        PostAssignment oldPostAssignment = postAssignmentService.getById(postAssignmentId);\r\n                        String key = \"sk:\" + postAssignmentId + \":qt\";\r\n                        // 修改前人数小于修改后人数\r\n                        if (oldPostAssignment.getPeopleNumber().longValue() > newPostAssignment.getPeopleNumber().longValue()) {\r\n                            LambdaQueryWrapper<Scheduled> scheduledLambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n                            scheduledLambdaQueryWrapper.eq(Scheduled::getPostAssignmentId, postAssignmentId);\r\n                            long cnt = scheduledService.count(scheduledLambdaQueryWrapper);\r\n                            // 如果小于就抛出异常\r\n                            if (cnt > newPostAssignment.getPeopleNumber().longValue()) {\r\n                                throw new SystemException(AppHttpCodeEnum.PEOPLE_NUM_ERROR);\r\n                            }\r\n                            // 否则就减小redis中的库存\r\n                            redisCache.decrementCount(key, oldPostAssignment.getPeopleNumber().longValue() - newPostAssignment.getPeopleNumber().longValue());\r\n                        } //修改后人数增加\r\n                        else {\r\n                            //增加redis中的库存\r\n                            redisCache.addCount(key, newPostAssignment.getPeopleNumber().longValue() - oldPostAssignment.getPeopleNumber().longValue());\r\n                        }\r\n                        // 修改岗位信息\r\n                        postAssignmentService.updateById(newPostAssignment);\r\n                    }\r\n                }// 新增岗位信息\r\n                else{\r\n                    newPostAssignment.setActivityAssignmentId(activityAssignment.getId());\r\n                    postAssignmentMapper.insert(newPostAssignment);\r\n                    String key = \"sk:\"+newPostAssignment.getId()+\":qt\";\r\n                    redisCache.setCacheObject(key,newPostAssignment.getPeopleNumber().intValue());\r\n                }\r\n            });\r\n        });\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n    @Transactional\r\n    @Override\r\n    public ResponseResult deleteActivity(Long id) {\r\n        //删除班次信息\r\n        deleteActivityAssignment(id);\r\n        //删除活动信息\r\n        removeById(id);\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n\r\n    @Override\r\n    public ResponseResult changeActivityStatus(ChangeActivityStatusDto changeActivityStatusDto) {\r\n        Activity activity = getById(changeActivityStatusDto.getActivityId());\r\n        activity.setStatus(changeActivityStatusDto.getStatus());\r\n        updateById(activity);\r\n        return ResponseResult.okResult();\r\n    }\r\n\r\n\r\n\r\n    public void deleteActivityAssignment(Long activityId){\r\n        // 查询当前活动的班次\r\n        LambdaQueryWrapper<ActivityAssignment> activityAssignmentLambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n        activityAssignmentLambdaQueryWrapper.eq(ActivityAssignment::getActivityId,activityId);\r\n        List<ActivityAssignment> activityAssignments = activityAssignmentService.list(activityAssignmentLambdaQueryWrapper);\r\n        activityAssignments.stream().forEach(o-> {\r\n            //删除岗位信息\r\n            deletePostAssignment(o.getId());\r\n            signInMapper.removeByAssignmentId(o.getId());\r\n            signInUserMapper.removeByAssignmentId(o.getId());\r\n            volunteerRecordMapper.removeByAssignmentId(o.getId());\r\n        });\r\n        //删除该活动班次信息\r\n        activityAssignmentService.remove(activityAssignmentLambdaQueryWrapper);\r\n    }\r\n    public void deletePostAssignment(Long activityAssignmentId){\r\n        //查询该班次对应的岗位信息\r\n        LambdaQueryWrapper<PostAssignment> postAssignmentLambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n        postAssignmentLambdaQueryWrapper.eq(PostAssignment::getActivityAssignmentId,activityAssignmentId);\r\n        List<PostAssignment> postAssignments = postAssignmentService.list(postAssignmentLambdaQueryWrapper);\r\n        postAssignments.stream().forEach(e->{\r\n            //删除招募信息\r\n            redisCache.deleteObject(\"sk:\"+e.getId()+\":qt\");\r\n            redisCache.deleteObject(\"sk:\"+e.getId()+\":user\");\r\n            //删除志愿者信息\r\n            deleteVolunteer(e.getId());\r\n        });\r\n        // 删除该班次的岗位信息\r\n        postAssignmentService.remove(postAssignmentLambdaQueryWrapper);\r\n    }\r\n    public void deleteVolunteer(Long postAssignmentId){\r\n        //查询该岗位信息填报的志愿者\r\n        LambdaQueryWrapper<Scheduled> scheduledLambdaQueryWrapper = new LambdaQueryWrapper<>();\r\n        scheduledLambdaQueryWrapper.eq(Scheduled::getPostAssignmentId,postAssignmentId);\r\n        // 删除该岗位志愿者报名信息\r\n        scheduledService.remove(scheduledLambdaQueryWrapper);\r\n        //删除redis中的数据\r\n        String key = \"sk:\"+postAssignmentId;\r\n        redisCache.deleteObject(key+\":qt\");\r\n        redisCache.deleteObject(key+\":user\");\r\n    }\r\n    public boolean doSecKill(Long userId, Long postAssignmentId)  {\r\n        //非空判断\r\n        if (Objects.isNull(userId) || Objects.isNull(postAssignmentId)) {\r\n            throw new SystemException(AppHttpCodeEnum.PARAM_NOT_NULL);\r\n        }\r\n\r\n        //3 拼接key\r\n        // 3.1 库存key\r\n        String kcKey = \"sk:\" + postAssignmentId + \":qt\";\r\n        // 3.2 秒杀成功用户key\r\n        String userKey = \"sk:\" + postAssignmentId + \":user\";\r\n\r\n        //4 获取库存，如果库存null，秒杀还没有开始\r\n        if (Objects.isNull(redisCache.getCacheObject(kcKey))) {\r\n            throw new SystemException(AppHttpCodeEnum.KILL_NOT_START);\r\n        }\r\n        int kc = redisCache.getCacheObject(kcKey) ;\r\n        // 5 判断用户是否重复秒杀操作\r\n        if (redisCache.isMember(userKey,String.valueOf(userId))) {\r\n            throw new SystemException(AppHttpCodeEnum.REQUEST_AGAIN);\r\n        }\r\n\r\n        //6 判断如果商品数量，库存数量小于1，秒杀结束\r\n        if (kc <= 0) {\r\n            throw new SystemException(AppHttpCodeEnum.KILL_PASS);\r\n        }\r\n\r\n        //7 秒杀过程\r\n        //7.1 库存-1\r\n        redisCache.decrementCount(kcKey,1L);\r\n        //7.2 把秒杀成功用户添加清单里面\r\n        redisCache.addMember(userKey,String.valueOf(userId));\r\n        System.out.println(\"秒杀成功了..\");\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java b/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java
--- a/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java	(revision 3976eff65764ed678335aa6abeeec561c1270f2c)
+++ b/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java	(date 1715478316580)
@@ -208,16 +208,13 @@
         if(!schedule.isEmpty()) {
             schedule.stream().forEach(
                     o -> {
-                        System.out.println(11);
                         List<ClassBo> classBos = activityAssignmentMapper.getTimeSlotVoList(activityId,o.getTypeId(),o.getLocationId(), o.getTime());
                         classBos.stream().forEach(
                                 e -> {
-                                    System.out.println(22);
                                     //根据时间段id、日期、地点获取岗位列表
                                     List<PostNeedBo> postNeedBoList = postMapper.getPostNeedVoList(e.getActivityAssignmentId(),null,user.getDepartmentId(),user.getTitleId());
                                     postNeedBoList.stream().forEach(
                                             k -> {
-                                                System.out.println(33);
                                                 String needPeople = k.getReqPeople();
                                                 LambdaQueryWrapper<Scheduled> lambdaQueryWrapper = new LambdaQueryWrapper<>();
                                                 lambdaQueryWrapper.eq(Scheduled::getPostAssignmentId, k.getId());
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d0f92e13-7531-4f0c-ba7d-0270795d8242\" name=\"更改\" comment=\"修改了部分活动报名时的逻辑判断\">\r\n      <change afterPath=\"$PROJECT_DIR$/admin/src/main/resources/application-dev.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/admin/src/main/resources/application-prod.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/admin/src/main/resources/application-test.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityAssignmentVo.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/weixin/src/main/resources/application-dev.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/weixin/src/main/resources/application-prod.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/weixin/src/main/resources/application-test.yml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/RedCross.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/RedCross.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/admin/admin.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/admin/admin.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/admin/src/main/resources/application.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/admin/src/main/resources/application.yml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/framework.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/framework.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/ActivityAssignmentVo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/ActivityAssignmentVo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityVo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityVo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/enums/AppHttpCodeEnum.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/enums/AppHttpCodeEnum.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ActivityMapper.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ActivityMapper.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ScheduledMapper.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ScheduledMapper.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/ActivityService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/ActivityService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInUserServiceImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInUserServiceImpl.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityAssignmentMapper.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityAssignmentMapper.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityMapper.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityMapper.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ScheduledMapper.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/framework/src/main/resources/mapper/ScheduledMapper.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/weixin/src/main/java/com/jx/controller/ActivityController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/weixin/src/main/java/com/jx/controller/ActivityController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/weixin/src/main/resources/application.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/weixin/src/main/resources/application.yml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/weixin/weixin.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/weixin/weixin.iml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ChangesViewManager\">\r\n    <option name=\"groupingKeys\">\r\n      <option value=\"directory\" />\r\n      <option value=\"module\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Mybatis Mapper\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"1CJX &lt;1500206893@qq.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"$PROJECT_DIR$/../../../apache-maven-3.9.4\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n        <option name=\"userSettingsFile\" value=\"D:\\Maven\\setting.xml\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2UpmB74HRkQiwTtheem7eiPoGwa\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelOrder2&quot;: &quot;2&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth2&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;1.8&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/CCJX/项目/RedCross/weixin/src/main/resources&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;模块&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15234375&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;File.Encoding&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;a3896cfa970c5ad8b3818d9e3284c6e4&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;mysql&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"ReactorSettings\">\r\n    <option name=\"notificationShown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.jx.domain.e\" />\r\n      <recent name=\"com.jx.domain.dto\" />\r\n      <recent name=\"com.jx.domain.vo\" />\r\n      <recent name=\"com.jx.domain.entity\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\weixin\\src\\main\\resources\" />\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\weixin\\src\\main\\resources\\templates\\freemarker\\img\" />\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\framework\\src\\main\\java\\com\\jx\" />\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\admin\\src\\main\\resources\\template\" />\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\framework\\src\\main\\java\\com\\jx\\domain\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\weixin\\src\\main\\resources\\templates\" />\r\n      <recent name=\"D:\\CCJX\\项目\\RedCross\\weixin\\src\\main\\resources\\templates\\freemarker\\img\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"com.jx.anatation\" />\r\n      <recent name=\"com.jx.controller\" />\r\n      <recent name=\"com.jx.service.impl\" />\r\n      <recent name=\"com.jx.utils\" />\r\n      <recent name=\"com.jx.domain.dto\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JAR 应用程序.weixin-1.0-SNAPSHOT.jar\">\r\n    <configuration name=\"weixin-1.0-SNAPSHOT.jar\" type=\"JarApplication\" temporary=\"true\">\r\n      <option name=\"JAR_PATH\" value=\"$PROJECT_DIR$/weixin/target/weixin-1.0-SNAPSHOT.jar\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"RedCross\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"RedCross\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"AdminApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <module name=\"admin\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.jx.AdminApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WeiXinApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"weixin\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.jx.WeiXinApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JAR 应用程序.weixin-1.0-SNAPSHOT.jar\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"d0f92e13-7531-4f0c-ba7d-0270795d8242\" name=\"更改\" comment=\"\" />\r\n      <created>1693644757849</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1693644757849</updated>\r\n      <workItem from=\"1693644759006\" duration=\"129000\" />\r\n      <workItem from=\"1693645179256\" duration=\"186000\" />\r\n      <workItem from=\"1693645377758\" duration=\"78000\" />\r\n      <workItem from=\"1693645473011\" duration=\"74000\" />\r\n      <workItem from=\"1693645561222\" duration=\"134000\" />\r\n      <workItem from=\"1693645724958\" duration=\"125000\" />\r\n      <workItem from=\"1693645859700\" duration=\"1197000\" />\r\n      <workItem from=\"1693652177305\" duration=\"387000\" />\r\n      <workItem from=\"1693654556561\" duration=\"278000\" />\r\n      <workItem from=\"1693654849664\" duration=\"1248000\" />\r\n      <workItem from=\"1693668024200\" duration=\"2597000\" />\r\n      <workItem from=\"1693709670579\" duration=\"5249000\" />\r\n      <workItem from=\"1694396008067\" duration=\"3473000\" />\r\n      <workItem from=\"1694506394304\" duration=\"315000\" />\r\n      <workItem from=\"1695722422996\" duration=\"4156000\" />\r\n      <workItem from=\"1696312371316\" duration=\"786000\" />\r\n      <workItem from=\"1696759946298\" duration=\"32000\" />\r\n      <workItem from=\"1696923559081\" duration=\"800000\" />\r\n      <workItem from=\"1697198882858\" duration=\"4788000\" />\r\n      <workItem from=\"1697206243819\" duration=\"7793000\" />\r\n      <workItem from=\"1697252056107\" duration=\"33316000\" />\r\n      <workItem from=\"1697334706011\" duration=\"4778000\" />\r\n      <workItem from=\"1697380344568\" duration=\"2133000\" />\r\n      <workItem from=\"1697414610073\" duration=\"7917000\" />\r\n      <workItem from=\"1697433583242\" duration=\"16618000\" />\r\n      <workItem from=\"1697467906229\" duration=\"667000\" />\r\n      <workItem from=\"1697468726644\" duration=\"596000\" />\r\n      <workItem from=\"1697625606804\" duration=\"4144000\" />\r\n      <workItem from=\"1697679945561\" duration=\"4695000\" />\r\n      <workItem from=\"1697705676145\" duration=\"91000\" />\r\n      <workItem from=\"1697711775608\" duration=\"66000\" />\r\n      <workItem from=\"1697714226855\" duration=\"2068000\" />\r\n      <workItem from=\"1697716322159\" duration=\"267000\" />\r\n      <workItem from=\"1697958368850\" duration=\"4950000\" />\r\n      <workItem from=\"1698019447067\" duration=\"7841000\" />\r\n      <workItem from=\"1698046399749\" duration=\"9120000\" />\r\n      <workItem from=\"1698107086472\" duration=\"945000\" />\r\n      <workItem from=\"1698109318495\" duration=\"5224000\" />\r\n      <workItem from=\"1698120480982\" duration=\"3427000\" />\r\n      <workItem from=\"1698127930352\" duration=\"6065000\" />\r\n      <workItem from=\"1698210739598\" duration=\"24383000\" />\r\n      <workItem from=\"1698288425723\" duration=\"15601000\" />\r\n      <workItem from=\"1698325420657\" duration=\"772000\" />\r\n      <workItem from=\"1698326225366\" duration=\"2282000\" />\r\n      <workItem from=\"1698329314156\" duration=\"3870000\" />\r\n      <workItem from=\"1698375428714\" duration=\"2780000\" />\r\n      <workItem from=\"1698378243798\" duration=\"1152000\" />\r\n      <workItem from=\"1698476272004\" duration=\"9015000\" />\r\n      <workItem from=\"1698592279351\" duration=\"653000\" />\r\n      <workItem from=\"1698623734527\" duration=\"9195000\" />\r\n      <workItem from=\"1698640172585\" duration=\"2080000\" />\r\n      <workItem from=\"1698654354824\" duration=\"17359000\" />\r\n      <workItem from=\"1698714230087\" duration=\"7994000\" />\r\n      <workItem from=\"1698738896942\" duration=\"2094000\" />\r\n      <workItem from=\"1698754849328\" duration=\"3544000\" />\r\n      <workItem from=\"1698759206485\" duration=\"175000\" />\r\n      <workItem from=\"1698767513665\" duration=\"2903000\" />\r\n      <workItem from=\"1698820011621\" duration=\"2489000\" />\r\n      <workItem from=\"1698826148093\" duration=\"7102000\" />\r\n      <workItem from=\"1698843641069\" duration=\"609000\" />\r\n      <workItem from=\"1698909878759\" duration=\"85000\" />\r\n      <workItem from=\"1698997542527\" duration=\"3781000\" />\r\n      <workItem from=\"1699083502082\" duration=\"1147000\" />\r\n      <workItem from=\"1699105485886\" duration=\"2000\" />\r\n      <workItem from=\"1699182619191\" duration=\"9891000\" />\r\n      <workItem from=\"1699247122255\" duration=\"26697000\" />\r\n      <workItem from=\"1699344314396\" duration=\"609000\" />\r\n      <workItem from=\"1699445438906\" duration=\"9713000\" />\r\n      <workItem from=\"1699518291610\" duration=\"7139000\" />\r\n      <workItem from=\"1699529274226\" duration=\"1011000\" />\r\n      <workItem from=\"1699531474205\" duration=\"6282000\" />\r\n      <workItem from=\"1699544499025\" duration=\"401000\" />\r\n      <workItem from=\"1699586998263\" duration=\"7124000\" />\r\n      <workItem from=\"1699615116055\" duration=\"6206000\" />\r\n      <workItem from=\"1699633064333\" duration=\"417000\" />\r\n      <workItem from=\"1699754440725\" duration=\"1236000\" />\r\n      <workItem from=\"1699763998445\" duration=\"465000\" />\r\n      <workItem from=\"1699788226365\" duration=\"1882000\" />\r\n      <workItem from=\"1699834168795\" duration=\"6986000\" />\r\n      <workItem from=\"1699852067962\" duration=\"1011000\" />\r\n      <workItem from=\"1699923739605\" duration=\"7563000\" />\r\n      <workItem from=\"1699956760093\" duration=\"920000\" />\r\n      <workItem from=\"1699963054201\" duration=\"308000\" />\r\n      <workItem from=\"1699963580331\" duration=\"3134000\" />\r\n      <workItem from=\"1700024815193\" duration=\"6000\" />\r\n      <workItem from=\"1700219743274\" duration=\"3787000\" />\r\n      <workItem from=\"1700231653016\" duration=\"1456000\" />\r\n      <workItem from=\"1700288653002\" duration=\"4771000\" />\r\n      <workItem from=\"1700362099087\" duration=\"1820000\" />\r\n      <workItem from=\"1700407534394\" duration=\"127000\" />\r\n      <workItem from=\"1700438373658\" duration=\"9327000\" />\r\n      <workItem from=\"1700528276701\" duration=\"5993000\" />\r\n      <workItem from=\"1700542146245\" duration=\"645000\" />\r\n      <workItem from=\"1700543999977\" duration=\"605000\" />\r\n      <workItem from=\"1700546006949\" duration=\"95000\" />\r\n      <workItem from=\"1700566394722\" duration=\"7833000\" />\r\n      <workItem from=\"1700633981514\" duration=\"10716000\" />\r\n      <workItem from=\"1700657264691\" duration=\"4127000\" />\r\n      <workItem from=\"1700702492343\" duration=\"5870000\" />\r\n      <workItem from=\"1700745460542\" duration=\"754000\" />\r\n      <workItem from=\"1700795224231\" duration=\"375000\" />\r\n      <workItem from=\"1700802810410\" duration=\"6753000\" />\r\n      <workItem from=\"1700824543008\" duration=\"7098000\" />\r\n      <workItem from=\"1700889549088\" duration=\"6906000\" />\r\n      <workItem from=\"1700916532922\" duration=\"1543000\" />\r\n      <workItem from=\"1700977210290\" duration=\"10061000\" />\r\n      <workItem from=\"1701010295351\" duration=\"1554000\" />\r\n      <workItem from=\"1701043162040\" duration=\"7388000\" />\r\n      <workItem from=\"1701057938973\" duration=\"6947000\" />\r\n      <workItem from=\"1701087879923\" duration=\"1544000\" />\r\n      <workItem from=\"1701132698065\" duration=\"3837000\" />\r\n      <workItem from=\"1701177682129\" duration=\"628000\" />\r\n      <workItem from=\"1701230807141\" duration=\"755000\" />\r\n      <workItem from=\"1701429063528\" duration=\"7236000\" />\r\n      <workItem from=\"1701510122118\" duration=\"561000\" />\r\n      <workItem from=\"1701592551567\" duration=\"4651000\" />\r\n      <workItem from=\"1701655047742\" duration=\"680000\" />\r\n      <workItem from=\"1701761043739\" duration=\"235000\" />\r\n      <workItem from=\"1701866557957\" duration=\"1734000\" />\r\n      <workItem from=\"1701951543608\" duration=\"5802000\" />\r\n      <workItem from=\"1701963843383\" duration=\"2516000\" />\r\n      <workItem from=\"1702011324957\" duration=\"1271000\" />\r\n      <workItem from=\"1702013163600\" duration=\"218000\" />\r\n      <workItem from=\"1702036903588\" duration=\"8298000\" />\r\n      <workItem from=\"1702097162234\" duration=\"7177000\" />\r\n      <workItem from=\"1702216359186\" duration=\"9000\" />\r\n      <workItem from=\"1702300834955\" duration=\"670000\" />\r\n      <workItem from=\"1702365001075\" duration=\"613000\" />\r\n      <workItem from=\"1702457549112\" duration=\"1815000\" />\r\n      <workItem from=\"1702695015010\" duration=\"1199000\" />\r\n      <workItem from=\"1703063171239\" duration=\"936000\" />\r\n      <workItem from=\"1703077667344\" duration=\"77000\" />\r\n      <workItem from=\"1703085543293\" duration=\"2088000\" />\r\n      <workItem from=\"1703130020509\" duration=\"1475000\" />\r\n      <workItem from=\"1703137660227\" duration=\"1720000\" />\r\n      <workItem from=\"1703158945720\" duration=\"597000\" />\r\n      <workItem from=\"1703160048782\" duration=\"25000\" />\r\n      <workItem from=\"1703160472902\" duration=\"15000\" />\r\n      <workItem from=\"1703162739323\" duration=\"12000\" />\r\n      <workItem from=\"1703162982375\" duration=\"2028000\" />\r\n      <workItem from=\"1703171862343\" duration=\"60000\" />\r\n      <workItem from=\"1703221377752\" duration=\"11294000\" />\r\n      <workItem from=\"1703312131398\" duration=\"2400000\" />\r\n      <workItem from=\"1703386852591\" duration=\"1862000\" />\r\n      <workItem from=\"1703428364776\" duration=\"1034000\" />\r\n      <workItem from=\"1703430040507\" duration=\"4000\" />\r\n      <workItem from=\"1703490790848\" duration=\"2566000\" />\r\n      <workItem from=\"1703509381460\" duration=\"1520000\" />\r\n      <workItem from=\"1703756507589\" duration=\"609000\" />\r\n      <workItem from=\"1703949844422\" duration=\"345000\" />\r\n      <workItem from=\"1704768289304\" duration=\"8836000\" />\r\n      <workItem from=\"1704803971488\" duration=\"625000\" />\r\n      <workItem from=\"1705222677690\" duration=\"2702000\" />\r\n      <workItem from=\"1705304071243\" duration=\"5780000\" />\r\n      <workItem from=\"1705376431923\" duration=\"6595000\" />\r\n      <workItem from=\"1705387761909\" duration=\"6789000\" />\r\n      <workItem from=\"1705411523083\" duration=\"3819000\" />\r\n      <workItem from=\"1705718947347\" duration=\"355000\" />\r\n      <workItem from=\"1705733713083\" duration=\"6728000\" />\r\n      <workItem from=\"1705821212550\" duration=\"3103000\" />\r\n      <workItem from=\"1705840653172\" duration=\"4549000\" />\r\n      <workItem from=\"1705889784411\" duration=\"11968000\" />\r\n      <workItem from=\"1706065946495\" duration=\"5742000\" />\r\n      <workItem from=\"1706104111831\" duration=\"953000\" />\r\n      <workItem from=\"1706152938340\" duration=\"5330000\" />\r\n      <workItem from=\"1706239716418\" duration=\"61000\" />\r\n      <workItem from=\"1706319545465\" duration=\"12166000\" />\r\n      <workItem from=\"1706409039248\" duration=\"23810000\" />\r\n      <workItem from=\"1706505893058\" duration=\"18853000\" />\r\n      <workItem from=\"1706765337113\" duration=\"6512000\" />\r\n      <workItem from=\"1706776650886\" duration=\"16379000\" />\r\n      <workItem from=\"1706837273073\" duration=\"9448000\" />\r\n      <workItem from=\"1707014014088\" duration=\"4611000\" />\r\n      <workItem from=\"1707111859541\" duration=\"2261000\" />\r\n      <workItem from=\"1707121081685\" duration=\"1937000\" />\r\n      <workItem from=\"1708391911447\" duration=\"676000\" />\r\n      <workItem from=\"1708676123918\" duration=\"1218000\" />\r\n      <workItem from=\"1708759185118\" duration=\"16156000\" />\r\n      <workItem from=\"1708913011408\" duration=\"4798000\" />\r\n      <workItem from=\"1708931250212\" duration=\"10737000\" />\r\n      <workItem from=\"1709012115639\" duration=\"3347000\" />\r\n      <workItem from=\"1709096705905\" duration=\"2211000\" />\r\n      <workItem from=\"1709111508168\" duration=\"9326000\" />\r\n      <workItem from=\"1709171995082\" duration=\"5945000\" />\r\n      <workItem from=\"1709185258229\" duration=\"6018000\" />\r\n      <workItem from=\"1709207412635\" duration=\"5824000\" />\r\n      <workItem from=\"1709216377463\" duration=\"1186000\" />\r\n      <workItem from=\"1709259869624\" duration=\"5769000\" />\r\n      <workItem from=\"1709351628699\" duration=\"595000\" />\r\n      <workItem from=\"1709447140074\" duration=\"24184000\" />\r\n      <workItem from=\"1709516675221\" duration=\"4600000\" />\r\n      <workItem from=\"1709536239016\" duration=\"4371000\" />\r\n      <workItem from=\"1709549305895\" duration=\"4269000\" />\r\n      <workItem from=\"1709597104350\" duration=\"447000\" />\r\n      <workItem from=\"1709618700881\" duration=\"8261000\" />\r\n      <workItem from=\"1709644041209\" duration=\"428000\" />\r\n      <workItem from=\"1709644629167\" duration=\"1940000\" />\r\n      <workItem from=\"1709713413325\" duration=\"772000\" />\r\n      <workItem from=\"1709779034572\" duration=\"341000\" />\r\n      <workItem from=\"1709779388250\" duration=\"101000\" />\r\n      <workItem from=\"1709779501269\" duration=\"165000\" />\r\n      <workItem from=\"1709780643491\" duration=\"137000\" />\r\n      <workItem from=\"1709789481261\" duration=\"1000\" />\r\n      <workItem from=\"1709790981324\" duration=\"2213000\" />\r\n      <workItem from=\"1709870380234\" duration=\"24000\" />\r\n      <workItem from=\"1709875095825\" duration=\"32000\" />\r\n      <workItem from=\"1710218622634\" duration=\"43000\" />\r\n      <workItem from=\"1710227027749\" duration=\"627000\" />\r\n      <workItem from=\"1710415286692\" duration=\"5733000\" />\r\n      <workItem from=\"1711094050863\" duration=\"426000\" />\r\n      <workItem from=\"1711452140273\" duration=\"387000\" />\r\n      <workItem from=\"1711457043263\" duration=\"628000\" />\r\n      <workItem from=\"1711530779971\" duration=\"36000\" />\r\n      <workItem from=\"1711587716708\" duration=\"65000\" />\r\n      <workItem from=\"1711630412601\" duration=\"634000\" />\r\n      <workItem from=\"1711632861417\" duration=\"94000\" />\r\n      <workItem from=\"1711780660343\" duration=\"370000\" />\r\n      <workItem from=\"1711781068048\" duration=\"426000\" />\r\n      <workItem from=\"1711782501250\" duration=\"2000\" />\r\n      <workItem from=\"1711963281266\" duration=\"448000\" />\r\n      <workItem from=\"1711965281897\" duration=\"21000\" />\r\n      <workItem from=\"1711975169726\" duration=\"595000\" />\r\n      <workItem from=\"1712109254123\" duration=\"569000\" />\r\n      <workItem from=\"1712110010785\" duration=\"1747000\" />\r\n      <workItem from=\"1712116564989\" duration=\"29000\" />\r\n      <workItem from=\"1712456186077\" duration=\"1195000\" />\r\n      <workItem from=\"1712564664984\" duration=\"1310000\" />\r\n      <workItem from=\"1712631778404\" duration=\"1219000\" />\r\n      <workItem from=\"1712646237160\" duration=\"1556000\" />\r\n      <workItem from=\"1712738156689\" duration=\"588000\" />\r\n      <workItem from=\"1713157708623\" duration=\"561000\" />\r\n      <workItem from=\"1713192046307\" duration=\"524000\" />\r\n      <workItem from=\"1713415380991\" duration=\"34000\" />\r\n      <workItem from=\"1714274289164\" duration=\"157000\" />\r\n      <workItem from=\"1714278740414\" duration=\"2574000\" />\r\n      <workItem from=\"1714281545438\" duration=\"77000\" />\r\n      <workItem from=\"1714726375142\" duration=\"10663000\" />\r\n      <workItem from=\"1714794568219\" duration=\"6874000\" />\r\n      <workItem from=\"1714875555685\" duration=\"5485000\" />\r\n      <workItem from=\"1714965917367\" duration=\"908000\" />\r\n      <workItem from=\"1714967938917\" duration=\"617000\" />\r\n      <workItem from=\"1714975789047\" duration=\"1000\" />\r\n      <workItem from=\"1714976040929\" duration=\"9000\" />\r\n      <workItem from=\"1715059926978\" duration=\"680000\" />\r\n      <workItem from=\"1715063623566\" duration=\"661000\" />\r\n      <workItem from=\"1715082089410\" duration=\"5678000\" />\r\n      <workItem from=\"1715126489788\" duration=\"6800000\" />\r\n      <workItem from=\"1715151030230\" duration=\"1978000\" />\r\n      <workItem from=\"1715174961392\" duration=\"781000\" />\r\n      <workItem from=\"1715232855082\" duration=\"61000\" />\r\n      <workItem from=\"1715412538866\" duration=\"15374000\" />\r\n      <workItem from=\"1715476348683\" duration=\"383000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"加入ReadMe文件\">\r\n      <created>1705235696169</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705235696169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"增加修改活动状态的接口\">\r\n      <created>1705328094762</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705328094762</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"修改了用户批量导入，失败数据导出的内容（增加了用户学号）\">\r\n      <created>1705381549101</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705381549101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"修改了用户批量导入，新增了职称导入\">\r\n      <created>1705386921773</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705386921773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"修改后台相关批量删除,优化部分后台修改机制\">\r\n      <created>1706166798720</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706166798720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"修改后台相关批量删除,优化部分后台修改机制\">\r\n      <created>1706173624400</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706173624400</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"修改了微信小程序端的签到，改为从后端生成二维码到前端，同时对数据库有修改\">\r\n      <created>1706455167899</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706455167899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"修改了后台的签到导出,以及用户批量导入对学院信息的处理\">\r\n      <created>1706778014261</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706778014261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"修改了部分活动报名时的逻辑判断\">\r\n      <created>1715083517116</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715083517116</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"加入ReadMe文件\" />\r\n    <MESSAGE value=\"增加修改活动状态的接口\" />\r\n    <MESSAGE value=\"修改了用户批量导入，失败数据导出的内容（增加了用户学号）\" />\r\n    <MESSAGE value=\"修改了用户批量导入，新增了职称导入\" />\r\n    <MESSAGE value=\"修改后台相关批量删除,优化部分后台修改机制\" />\r\n    <MESSAGE value=\"修改了微信小程序端的签到，改为从后端生成二维码到前端，同时对数据库有修改\" />\r\n    <MESSAGE value=\"修改了后台的签到导出,以及用户批量导入对学院信息的处理\" />\r\n    <MESSAGE value=\"修改了部分活动报名时的逻辑判断\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"修改了部分活动报名时的逻辑判断\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/RedCross$WeiXinApplication.ic\" NAME=\"WeiXinApplication 覆盖结果\" MODIFIED=\"1702100789810\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3976eff65764ed678335aa6abeeec561c1270f2c)
+++ b/.idea/workspace.xml	(date 1715478316590)
@@ -4,39 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d0f92e13-7531-4f0c-ba7d-0270795d8242" name="更改" comment="修改了部分活动报名时的逻辑判断">
-      <change afterPath="$PROJECT_DIR$/admin/src/main/resources/application-dev.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/admin/src/main/resources/application-prod.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/admin/src/main/resources/application-test.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityAssignmentVo.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/weixin/src/main/resources/application-dev.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/weixin/src/main/resources/application-prod.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/weixin/src/main/resources/application-test.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_13_2.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_2_0_Final.xml" afterDir="false" />
+    <list default="true" id="d0f92e13-7531-4f0c-ba7d-0270795d8242" name="更改" comment="修改了部分小bug,添加了yml版本管理">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/RedCross.iml" beforeDir="false" afterPath="$PROJECT_DIR$/RedCross.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/admin/admin.iml" beforeDir="false" afterPath="$PROJECT_DIR$/admin/admin.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/admin/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/admin/src/main/resources/application.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/framework.iml" beforeDir="false" afterPath="$PROJECT_DIR$/framework/framework.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/ActivityAssignmentVo.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/ActivityAssignmentVo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityVo.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/domain/vo/UserActivityVo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/enums/AppHttpCodeEnum.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/enums/AppHttpCodeEnum.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ActivityMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ActivityMapper.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ScheduledMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/mapper/ScheduledMapper.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/ActivityService.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/ActivityService.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/ActivityServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInUserServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/java/com/jx/service/impl/SignInUserServiceImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityAssignmentMapper.xml" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityAssignmentMapper.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityMapper.xml" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/resources/mapper/ActivityMapper.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/framework/src/main/resources/mapper/ScheduledMapper.xml" beforeDir="false" afterPath="$PROJECT_DIR$/framework/src/main/resources/mapper/ScheduledMapper.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/weixin/src/main/java/com/jx/controller/ActivityController.java" beforeDir="false" afterPath="$PROJECT_DIR$/weixin/src/main/java/com/jx/controller/ActivityController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/weixin/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/weixin/src/main/resources/application.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/weixin/weixin.iml" beforeDir="false" afterPath="$PROJECT_DIR$/weixin/weixin.iml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -455,7 +424,7 @@
       <workItem from="1715174961392" duration="781000" />
       <workItem from="1715232855082" duration="61000" />
       <workItem from="1715412538866" duration="15374000" />
-      <workItem from="1715476348683" duration="383000" />
+      <workItem from="1715476348683" duration="1631000" />
     </task>
     <task id="LOCAL-00001" summary="加入ReadMe文件">
       <created>1705235696169</created>
@@ -520,7 +489,21 @@
       <option name="project" value="LOCAL" />
       <updated>1715083517116</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="修改了部分小bug,添加了yml版本管理">
+      <created>1715476876930</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1715476876930</updated>
+    </task>
+    <task id="LOCAL-00011" summary="修改了部分小bug,添加了yml版本管理">
+      <created>1715476990918</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1715476990918</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -546,7 +529,8 @@
     <MESSAGE value="修改了微信小程序端的签到，改为从后端生成二维码到前端，同时对数据库有修改" />
     <MESSAGE value="修改了后台的签到导出,以及用户批量导入对学院信息的处理" />
     <MESSAGE value="修改了部分活动报名时的逻辑判断" />
-    <option name="LAST_COMMIT_MESSAGE" value="修改了部分活动报名时的逻辑判断" />
+    <MESSAGE value="修改了部分小bug,添加了yml版本管理" />
+    <option name="LAST_COMMIT_MESSAGE" value="修改了部分小bug,添加了yml版本管理" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
